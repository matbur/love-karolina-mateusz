{"version":3,"sources":["utils/date.ts","components/Days.tsx","components/Months.tsx","components/Weeks.tsx","components/Event.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["beforeAfter","val","s","concat","Days","_ref","days","date","today","diff","calculateDays","react_default","a","createElement","Months","_calculateMonths","dd","nd","diffDays","clone","endOf","months","calculateMonths","Fragment","Math","abs","Weeks","_calculateWeeks","weeks","calculateWeeks","Event","header","value","now","src","handleClick","moment","Card","bg","style","minWidth","marginBottom","onClick","Img","variant","Body","Title","components_Days","components_Weeks","components_Months","Footer","className","format","locale","App","state","clicked","isHidden","n","_this","code","isOpen","equals","setState","takeLast","length","Object","toConsumableArray","_this2","this","setInterval","_this$state","startOf","Header","CardDeck","components_Event","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e678caf3.chunk.js","sourcesContent":["import { Moment } from 'moment';\n\nexport const beforeAfter = (val: number, s: string): string =>\n  val > 0 ? `za ${val} ${s}` : `${-val} ${s} temu`;\n\nexport const calculateDays = (date: Moment, today: Moment): number =>\n  date.diff(today, 'days');\n\nexport const calculateWeeks = (date: Moment, today: Moment): { weeks: number; days: number } => {\n  const diff = date.diff(today, 'days');\n\n  return {\n    weeks: diff / 7 >> 0,\n    days: diff % 7,\n  };\n};\n\nexport const calculateMonths = (date: Moment, today: Moment): { months: number; days: number } => {\n  const diff = date.diff(today, 'days');\n  const dd = date.date();\n  const nd = today.date();\n\n  let diffDays = 0;\n  if (diff < 0) {\n    if (dd < nd) {\n      diffDays = dd - nd;\n    } else if (dd > nd) {\n      diffDays = dd - nd - date.clone().endOf('month').date();\n    }\n  } else if (diff > 0) {\n    if (dd < nd) {\n      diffDays = dd - nd + today.clone().endOf('month').date();\n    } else if (dd > nd) {\n      diffDays = dd - nd;\n    }\n  }\n\n  return {\n    months: date.diff(today, 'months'),\n    days: diffDays,\n  };\n};","import React, { ReactElement } from 'react';\n\nimport { beforeAfter, calculateDays } from '../utils/date';\nimport { PartsProps } from './props';\n\nconst Days: React.FC<PartsProps> = ({ date, today }): ReactElement => {\n  const days = calculateDays(date, today);\n\n  return (\n    <li>\n      {days === 0\n        ? 'to ju≈º dzisiaj'\n        : beforeAfter(days, 'dni')\n      }\n    </li>\n  );\n};\n\nexport default Days;","import React, { ReactElement } from 'react';\n\nimport { beforeAfter, calculateMonths } from '../utils/date';\nimport { PartsProps } from './props';\n\nconst Months: React.FC<PartsProps> = ({ date, today }): ReactElement | null => {\n  const { months, days } = calculateMonths(date, today);\n\n  return months === 0\n    ? null\n    : (\n      <li>\n        {beforeAfter(months, 'm-cy')}\n        {days === 0\n          ? null\n          : (\n            <>\n              <br />\n              {`i ${Math.abs(days)} dni`}\n            </>\n          )}\n      </li>\n    );\n};\n\nexport default Months;","import React, { ReactElement } from 'react';\n\nimport { beforeAfter, calculateWeeks } from '../utils/date';\nimport { PartsProps } from './props';\n\nconst Weeks: React.FC<PartsProps> = ({ date, today }): ReactElement | null => {\n  const { weeks, days } = calculateWeeks(date, today);\n\n  return weeks === 0\n    ? null\n    : (\n      <li>\n        {beforeAfter(weeks, 'tyg.')}\n        {days === 0\n          ? null\n          : (\n            <>\n              <br />\n              {`i ${Math.abs(days)} dni`}\n            </>\n          )}\n      </li>\n    );\n};\n\nexport default Weeks;","import React, { ReactElement } from 'react';\nimport moment, { Moment } from 'moment';\nimport { Card } from 'react-bootstrap';\n\nimport Days from './Days';\nimport Months from './Months';\nimport Weeks from './Weeks';\n\ninterface EventProps {\n  header: string;\n  value: string;\n  now: Moment;\n  src: string;\n  handleClick: () => void;\n}\n\nconst Event: React.FC<EventProps> = ({ header, value, now, src, handleClick }): React.ReactElement => {\n  const date = moment(value);\n\n  return (\n    <Card\n      bg=\"light\"\n      style={{ minWidth: '11.09rem', marginBottom: 10 }}\n      onClick={handleClick}\n    >\n      <Card.Img variant=\"top\" src={src} />\n      <Card.Body>\n        <Card.Title>{header}</Card.Title>\n        <ul>\n          <Days date={date} today={now} />\n          <Weeks date={date} today={now} />\n          <Months date={date} today={now} />\n        </ul>\n      </Card.Body>\n      <Card.Footer>\n        <small className=\"text-muted\">{`${date.format('ddd, D MMM Y')}`}</small>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default Event;","import 'moment/locale/pl';\nimport { Card, CardDeck } from 'react-bootstrap';\nimport React, { Component, ReactElement } from 'react';\nimport { equals, takeLast } from 'ramda';\nimport moment, { Moment } from 'moment';\n\nimport Event from './components/Event';\n\nmoment.locale('pl');\n\ninterface AppState {\n  now: Moment;\n  clicked: number[];\n  isHidden: boolean;\n}\nclass App extends Component<{}, AppState> {\n  public state = {\n    now: moment(),\n    clicked: [],\n    isHidden: true,\n  };\n\n  public componentDidMount(): void {\n    setInterval((): void => {\n      this.setState({\n        now: moment(),\n      });\n    }, 100);\n  }\n\n  private clicked = (n: number): (() => void) => (): void => {\n    const { clicked } = this.state;\n    const code = [1, 1, 2, 1, 1, 1, 2];\n    const isOpen = equals(clicked, code) && n === 2;\n\n    this.setState({\n      clicked: isOpen ? [] : takeLast(code.length, [...clicked, n]),\n      isHidden: !isOpen,\n    });\n  };\n\n  public render(): ReactElement {\n    const { now, isHidden } = this.state;\n    const today = now.clone().startOf('day');\n\n    return (\n      <Card>\n        <Card.Header className=\"text-center\">\n          {'\\u2619 Karolina i Mateusz \\u2767'}\n        </Card.Header>\n        <Card.Body>\n          <CardDeck>\n            <Event\n              header=\"Piersze spotkanie\"\n              value=\"2018-07-23\"\n              now={today}\n              src=\"kajaki.jpg\"\n              handleClick={this.clicked(1)}\n            />\n            <Event\n              header=\"PoczƒÖtek zwiƒÖzku\"\n              value=\"2018-09-14\"\n              now={today}\n              src=\"giewont.jpg\"\n              handleClick={this.clicked(2)}\n            />\n            {isHidden ? null : (\n              <Event\n                header=\"Vegas\"\n                value=\"2020-08-22\"\n                now={today}\n                src=\"vegas.jpg\"\n                handleClick={this.clicked(3)}\n              />\n            )}\n          </CardDeck>\n        </Card.Body>\n        <Card.Footer>\n          <small className=\"text-muted\">{`${now.format('ddd, D MMM Y - HH:mm:ss')}`}</small>\n        </Card.Footer>\n      </Card>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}